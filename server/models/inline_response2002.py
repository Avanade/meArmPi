# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server.models.point import Point  # noqa: F401,E501
from server import util


class InlineResponse2002(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, number_of_movements: int=None, duration: int=None, position: Point=None):  # noqa: E501
        """InlineResponse2002 - a model defined in Swagger

        :param number_of_movements: The number_of_movements of this InlineResponse2002.  # noqa: E501
        :type number_of_movements: int
        :param duration: The duration of this InlineResponse2002.  # noqa: E501
        :type duration: int
        :param position: The position of this InlineResponse2002.  # noqa: E501
        :type position: Point
        """
        self.swagger_types = {
            'number_of_movements': int,
            'duration': int,
            'position': Point
        }

        self.attribute_map = {
            'number_of_movements': 'numberOfMovements',
            'duration': 'duration',
            'position': 'position'
        }

        self._number_of_movements = number_of_movements
        self._duration = duration
        self._position = position

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2002':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_2 of this InlineResponse2002.  # noqa: E501
        :rtype: InlineResponse2002
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_movements(self) -> int:
        """Gets the number_of_movements of this InlineResponse2002.


        :return: The number_of_movements of this InlineResponse2002.
        :rtype: int
        """
        return self._number_of_movements

    @number_of_movements.setter
    def number_of_movements(self, number_of_movements: int):
        """Sets the number_of_movements of this InlineResponse2002.


        :param number_of_movements: The number_of_movements of this InlineResponse2002.
        :type number_of_movements: int
        """

        self._number_of_movements = number_of_movements

    @property
    def duration(self) -> int:
        """Gets the duration of this InlineResponse2002.


        :return: The duration of this InlineResponse2002.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration: int):
        """Sets the duration of this InlineResponse2002.


        :param duration: The duration of this InlineResponse2002.
        :type duration: int
        """

        self._duration = duration

    @property
    def position(self) -> Point:
        """Gets the position of this InlineResponse2002.


        :return: The position of this InlineResponse2002.
        :rtype: Point
        """
        return self._position

    @position.setter
    def position(self, position: Point):
        """Sets the position of this InlineResponse2002.


        :param position: The position of this InlineResponse2002.
        :type position: Point
        """

        self._position = position
