# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class Point(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, x: float=None, y: float=None, z: float=None, r: float=None, lat: float=None, lng: float=None):  # noqa: E501
        """Point - a model defined in Swagger

        :param x: The x of this Point.  # noqa: E501
        :type x: float
        :param y: The y of this Point.  # noqa: E501
        :type y: float
        :param z: The z of this Point.  # noqa: E501
        :type z: float
        :param r: The r of this Point.  # noqa: E501
        :type r: float
        :param lat: The lat of this Point.  # noqa: E501
        :type lat: float
        :param lng: The lng of this Point.  # noqa: E501
        :type lng: float
        """
        self.swagger_types = {
            'x': float,
            'y': float,
            'z': float,
            'r': float,
            'lat': float,
            'lng': float
        }

        self.attribute_map = {
            'x': 'x',
            'y': 'y',
            'z': 'z',
            'r': 'r',
            'lat': 'lat',
            'lng': 'lng'
        }

        self._x = x
        self._y = y
        self._z = z
        self._r = r
        self._lat = lat
        self._lng = lng

    @classmethod
    def from_dict(cls, dikt) -> 'Point':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Point of this Point.  # noqa: E501
        :rtype: Point
        """
        return util.deserialize_model(dikt, cls)

    @property
    def x(self) -> float:
        """Gets the x of this Point.


        :return: The x of this Point.
        :rtype: float
        """
        return self._x

    @x.setter
    def x(self, x: float):
        """Sets the x of this Point.


        :param x: The x of this Point.
        :type x: float
        """

        self._x = x

    @property
    def y(self) -> float:
        """Gets the y of this Point.


        :return: The y of this Point.
        :rtype: float
        """
        return self._y

    @y.setter
    def y(self, y: float):
        """Sets the y of this Point.


        :param y: The y of this Point.
        :type y: float
        """

        self._y = y

    @property
    def z(self) -> float:
        """Gets the z of this Point.


        :return: The z of this Point.
        :rtype: float
        """
        return self._z

    @z.setter
    def z(self, z: float):
        """Sets the z of this Point.


        :param z: The z of this Point.
        :type z: float
        """

        self._z = z

    @property
    def r(self) -> float:
        """Gets the r of this Point.


        :return: The r of this Point.
        :rtype: float
        """
        return self._r

    @r.setter
    def r(self, r: float):
        """Sets the r of this Point.


        :param r: The r of this Point.
        :type r: float
        """

        self._r = r

    @property
    def lat(self) -> float:
        """Gets the lat of this Point.


        :return: The lat of this Point.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat: float):
        """Sets the lat of this Point.


        :param lat: The lat of this Point.
        :type lat: float
        """

        self._lat = lat

    @property
    def lng(self) -> float:
        """Gets the lng of this Point.


        :return: The lng of this Point.
        :rtype: float
        """
        return self._lng

    @lng.setter
    def lng(self, lng: float):
        """Sets the lng of this Point.


        :param lng: The lng of this Point.
        :type lng: float
        """

        self._lng = lng
